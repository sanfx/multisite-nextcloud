global
  log         127.0.0.1 syslog
  maxconn     1000
  user        haproxy
  group       haproxy
  daemon
  tune.ssl.default-dh-param 4096
  ssl-default-bind-options no-sslv3 no-tls-tickets
  ssl-default-bind-ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH

defaults
  log  global
  mode  http
  option  httplog
  option  dontlognull
  option  http-server-close
  option  forwardfor except 127.0.0.0/8
  option  redispatch
  option  contstats
  retries  3
  timeout  http-request 10s
  timeout  queue 1m
  timeout  connect 10s
  timeout  client 1m
  timeout  server 1m
  timeout  check 10s


###########################################
#
# HAProxy Stats page
#
###########################################
listen stats
  bind *:9090
  mode  http
  maxconn  10
  stats  enable
  stats  hide-version
  stats  realm Haproxy\ Statistics
  stats  uri /
  stats  auth admin:admin

###########################################
#
# Front end for all
#
###########################################
frontend ALL
  bind   *:80
  bind   *:443 ssl crt /etc/haproxy/certs/my.cloud.com.pem
  mode   http

  #Define path for lets encrypt
  acl is_letsencrypt path_beg -i /.well-known/acme-challenge/
  use_backend letsencrypt if is_letsencrypt

  # Define hosts
  acl host_nc_site_a hdr(host) -i my.cloud.com

  # Direct hosts to backend
  use_backend nc_site_a if host_nc_site_a

  # Redirect port 80 to 443
  # But do not redirect letsencrypt since it checks port 80 and not 443
  redirect scheme https code 301 if !{ ssl_fc } !is_letsencrypt

###########################################
#
# Back end for nc_site_a
#
###########################################
backend nc_site_a
  balance         roundrobin
  default-server  inter 3s fall 3 rise 2
  server nc1 192.168.0.2:80 check inter 1000
  server nc2 192.168.0.3:8888 check inter 1000
  server nc3 192.168.0.4:80 check inter 1000

###########################################
#
# Back end letsencrypt
#
###########################################
backend letsencrypt
  server letsencrypt 127.0.0.1:8888


# Redis block start
defaults REDIS
       mode tcp
       timeout connect 4s
       timeout server 30s
       timeout client 30s

frontend front_redis
       bind *:3679 name redis
       default_backend back_redis

backend back_redis
       option tcp-check
       tcp-check connect
       tcp-check send AUTH\ redis123\r\n
       tcp-check expect string +OK
       tcp-check send PING\r\n
       tcp-check expect string +PONG
       tcp-check send info\ replication\r\n
       tcp-check expect string role:master
       tcp-check send QUIT\r\n
       tcp-check expect string +OK

       server redis-a 192.168.0.2:6379 check inter 1s
       server redis-b 192.168.0.3:6379 check inter 1s
       server redis-c 192.168.0.4:6379 check inter 1s


